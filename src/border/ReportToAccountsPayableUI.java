/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReportToAccountsPayable.java
 *
 * Created on Feb 7, 2011, 6:37:47 PM
 */

package border;

import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.List;

import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumn;

import border.util.FormattedRenderer;

import control.ProviderReport;

/**
 * 
 * @author Brandon
 */
@SuppressWarnings("serial")
public class ReportToAccountsPayableUI extends javax.swing.JFrame {

	public static class AccountsPayableTableModel
		extends
		AbstractTableModel {
		
		private List<ProviderReport.ReportItem> report_data;
		
		public List<ProviderReport.ReportItem> getReportData() {
			return report_data;
		}

		@Override
		public int getRowCount() {
			if(report_data == null){
				return 0;
			}else{
				return report_data.size();
			}
		}

		@Override
		public int getColumnCount() {
			return 3;
		}

		@Override
		public Class<?> getColumnClass(int columnIndex){
			switch (columnIndex) {
			case 0:
				return String.class;
			case 1: 
				return Integer.class;
			case 2:
				return BigDecimal.class;
			default:
				return null;
			}
		}
		
		@Override
		public Object getValueAt(
			int rowIndex,
			int columnIndex) {
			
			ProviderReport.ReportItem row = report_data.get(rowIndex);
			switch (columnIndex) {
			case 0:
				return row.provider.getProviderName();
			case 1:
				return Integer.valueOf(row.services.size());
			case 2:
				return row.total;
			default:
				return null;
			}
		}
	}
	
	private AccountsPayableTableModel table_model;
	private DefaultTableColumnModel col_model;
	
	/** Creates new form ReportToAccountsPayable */
	public ReportToAccountsPayableUI() {
		initTable();
		initComponents();
	}

	private void initTable() {
		table_model = new AccountsPayableTableModel();
		col_model = new DefaultTableColumnModel();
		
		TableColumn col1 = new TableColumn(0);
		col1.setHeaderValue("Provider");
		col_model.addColumn(col1);
		
		TableColumn col2 = new TableColumn(1);
		col2.setHeaderValue("# of consultations");
		col_model.addColumn(col2);
		
		TableColumn col3 = new TableColumn(2);
		col3.setHeaderValue("Fee");
		col3.setCellRenderer(new FormattedRenderer(NumberFormat.getCurrencyInstance()));
		col_model.addColumn(col3);
		
	}
	
	private void reloadData(){
		//TODO
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(pdx.edu.cs300_group9.DesktopApplication2.class).getContext().getResourceMap(ReportToAccountsPayableUI.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Doctor", "1", "$1500", null},
                {"Therapist", "3", "$150", null},
                {null, null, null, "$1650"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Provider", "# of Consultations", "Fee", "Total Fee"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ReportToAccountsPayableUI().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
